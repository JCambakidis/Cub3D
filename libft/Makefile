# Colors
GREY = \033[4;34m
RED = \033[1;31m
GREEN = \033[3;32m
YELLOW = \033[2;49;33m
BLUE = \033[4;34m
BLUEE = \033[3;34m
PURPLE = \033[3;35m
CYAN = \033[3;36m
RESET = \033[0m
ICONOK = \033[1;32m
ICONKO = \033[1;31m
CO_DELET = \033[3;31m
CO_A_OUT = \033[96m
WHITE = \033[1;49;97m

SRCS += add_vector_coord.c
SRCS += add_vector_vector.c
SRCS += color_to_int.c
SRCS += create_color.c
SRCS += create_interval.c
SRCS += create_point3.c
SRCS += create_vector.c
SRCS += distance2.c
SRCS += distance3.c
SRCS += distance_point3.c
SRCS += distance_square2.c
SRCS += distance_square3.c
SRCS += distance_square_point3.c
SRCS += div_vector_coord.c
SRCS += div_vector_value.c
SRCS += div_vector_vector.c
SRCS += ft_abs.c
SRCS += ft_append_strs.c
SRCS += ft_atoi.c
SRCS += ft_bzero.c
SRCS += ft_calloc.c
SRCS += ft_close_file.c
SRCS += ft_contains_char.c
SRCS += ft_count_file_lines.c
SRCS += ft_create_file_content.c
SRCS += ft_ctostr.c
SRCS += ft_destroy_file_content.c
SRCS += ft_destroy_splitted.c
SRCS += ft_fabs.c
SRCS += ft_fill_file_content.c
SRCS += ft_find_char.c
SRCS += ft_fmax.c
SRCS += ft_fmin.c
SRCS += ft_get_file_content.c
SRCS += ft_get_splitted_size.c
SRCS += ft_iabsui.c
SRCS += ft_ll_length.c
SRCS += ft_lltoa_ibase.c
SRCS += ft_lowercase_char.c
SRCS += ft_map.c
SRCS += ft_max.c
SRCS += ft_memset.c
SRCS += ft_min.c
SRCS += ft_natoi.c
SRCS += ft_open_file.c
SRCS += ft_printf.c
SRCS += ft_putchar.c
SRCS += ft_putchar_err.c
SRCS += ft_putchar_errnl.c
SRCS += ft_putchar_fd.c
SRCS += ft_putchar_fdnl.c
SRCS += ft_putchar_nl.c
SRCS += ft_puti.c
SRCS += ft_puti_err.c
SRCS += ft_puti_errnl.c
SRCS += ft_puti_fd.c
SRCS += ft_puti_fdnl.c
SRCS += ft_puti_nl.c
SRCS += ft_putl.c
SRCS += ft_putl_err.c
SRCS += ft_putl_errnl.c
SRCS += ft_putl_fd.c
SRCS += ft_putl_fdnl.c
SRCS += ft_putl_nl.c
SRCS += ft_putll.c
SRCS += ft_putll_err.c
SRCS += ft_putll_errnl.c
SRCS += ft_putll_fd.c
SRCS += ft_putll_fdnl.c
SRCS += ft_putll_nl.c
SRCS += ft_putnchar.c
SRCS += ft_putnchar_err.c
SRCS += ft_putnchar_errnl.c
SRCS += ft_putnchar_fd.c
SRCS += ft_putnchar_fdnl.c
SRCS += ft_putnchar_nl.c
SRCS += ft_putstr.c
SRCS += ft_putstr_err.c
SRCS += ft_putstr_errnl.c
SRCS += ft_putstr_fd.c
SRCS += ft_putstr_fdnl.c
SRCS += ft_putstr_nl.c
SRCS += ft_putui.c
SRCS += ft_putui_err.c
SRCS += ft_putui_errnl.c
SRCS += ft_putui_fd.c
SRCS += ft_putui_fdnl.c
SRCS += ft_putui_nl.c
SRCS += ft_putul.c
SRCS += ft_putul_err.c
SRCS += ft_putul_errnl.c
SRCS += ft_putul_fd.c
SRCS += ft_putul_fdnl.c
SRCS += ft_putul_nl.c
SRCS += ft_putull.c
SRCS += ft_putull_err.c
SRCS += ft_putull_errnl.c
SRCS += ft_putull_fd.c
SRCS += ft_putull_fdnl.c
SRCS += ft_putull_nl.c
SRCS += ft_read_next_line.c
SRCS += ft_split.c
SRCS += ft_strcmp.c
SRCS += ft_strcpy.c
SRCS += ft_strdup.c
SRCS += ft_strlen.c
SRCS += ft_strmult_back.c
SRCS += ft_strmult_front.c
SRCS += ft_strndup.c
SRCS += ft_tolower.c
SRCS += ft_toupper.c
SRCS += ft_ull_ibase_length.c
SRCS += ft_ull_length.c
SRCS += ft_ulltoa_ibase.c
SRCS += ft_uppercase_char.c
SRCS += is_alpha.c
SRCS += is_alphanumeric.c
SRCS += is_ascii.c
SRCS += is_lowercase.c
SRCS += is_numeric.c
SRCS += is_printable.c
SRCS += is_space.c
SRCS += is_uppercase.c
SRCS += is_whitespace.c
SRCS += mult_vector_coord.c
SRCS += mult_vector_value.c
SRCS += mult_vector_vector.c
SRCS += printf_c_processor.c
SRCS += printf_create_printable.c
SRCS += printf_display.c
SRCS += printf_diuxx_processor.c
SRCS += printf_dot_parser.c
SRCS += printf_is_valid_flag.c
SRCS += printf_is_valid_type.c
SRCS += printf_minus_parser.c
SRCS += printf_p_processor.c
SRCS += printf_parse_printable.c
SRCS += printf_pcrt_processor.c
SRCS += printf_preprocess.c
SRCS += printf_process.c
SRCS += printf_s_processor.c
SRCS += printf_star_parser.c
SRCS += printf_zero_parser.c
SRCS += rotate_vector.c
SRCS += rotate_vector_x.c
SRCS += rotate_vector_y.c
SRCS += rotate_vector_z.c
SRCS += sub_vector_coord.c
SRCS += sub_vector_vector.c

NAME		=	libft.a

INCLUDES	=	./
OBJS		=	$(SRCS:.c=.o)

GCC			=	@gcc
FLAGS		=	-Wall -Wextra -Werror
RM			=	@rm -f

%.o:	%.c libft.h
	$(GCC) $(FLAGS) -I $(INCLUDES) -c $< -o $@
	@printf "\033[2K\r$(BLUE)$(NAME)$(RESET)$(BLUEE): $(PURPLE)$<$(RESET)"

$(NAME): libft.h $(OBJS)
	@ar rc $(NAME) $(OBJS)

all: $(NAME)

clean:
	$(RM) $(OBJS)

fclean: clean
	@$(RM) $(NAME)

re: fclean all

gmk:
	./scripts/generate-mk.sh

norminette: clean
	@echo " "
	norminette sources
	@echo " "
	norminette includes

test: $(NAME)
	@echo "----- MAKEFILE TESTS -----"
	
export:
	./scripts/export.sh

end:
	./scripts/end.sh

.PHONY: all clean fclean re gmk norminette test export end
